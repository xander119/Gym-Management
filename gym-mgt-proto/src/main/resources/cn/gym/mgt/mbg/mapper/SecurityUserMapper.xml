<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.gym.mgt.mbg.mapper.SecurityUserMapper">
  <resultMap id="BaseResultMap" type="cn.gym.mgt.mbg.model.SecurityUser">
    <id column="security_user_id" jdbcType="BIGINT" property="securityUserId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="date_of_birth" jdbcType="DATE" property="dateOfBirth" />
    <result column="phone" jdbcType="INTEGER" property="phone" />
    <result column="gender" jdbcType="BIGINT" property="gender" />
    <result column="role" jdbcType="BIGINT" property="role" />
    <result column="firstname" jdbcType="VARCHAR" property="firstname" />
    <result column="lastname" jdbcType="VARCHAR" property="lastname" />
    <result column="active" jdbcType="BIT" property="active" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    security_user_id, username, password, email, date_of_birth, phone, gender, role, 
    firstname, lastname, active, create_date, update_date
  </sql>
  <select id="selectByExample" parameterType="cn.gym.mgt.mbg.model.SecurityUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from security_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from security_user
    where security_user_id = #{securityUserId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from security_user
    where security_user_id = #{securityUserId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.gym.mgt.mbg.model.SecurityUserExample">
    delete from security_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gym.mgt.mbg.model.SecurityUser">
    insert into security_user (security_user_id, username, password, 
      email, date_of_birth, phone, 
      gender, role, firstname, 
      lastname, active, create_date, 
      update_date)
    values (#{securityUserId,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{dateOfBirth,jdbcType=DATE}, #{phone,jdbcType=INTEGER}, 
      #{gender,jdbcType=BIGINT}, #{role,jdbcType=BIGINT}, #{firstname,jdbcType=VARCHAR}, 
      #{lastname,jdbcType=VARCHAR}, #{active,jdbcType=BIT}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.gym.mgt.mbg.model.SecurityUser">
    insert into security_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="securityUserId != null">
        security_user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="dateOfBirth != null">
        date_of_birth,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="firstname != null">
        firstname,
      </if>
      <if test="lastname != null">
        lastname,
      </if>
      <if test="active != null">
        active,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="securityUserId != null">
        #{securityUserId,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="dateOfBirth != null">
        #{dateOfBirth,jdbcType=DATE},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=BIGINT},
      </if>
      <if test="role != null">
        #{role,jdbcType=BIGINT},
      </if>
      <if test="firstname != null">
        #{firstname,jdbcType=VARCHAR},
      </if>
      <if test="lastname != null">
        #{lastname,jdbcType=VARCHAR},
      </if>
      <if test="active != null">
        #{active,jdbcType=BIT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.gym.mgt.mbg.model.SecurityUserExample" resultType="java.lang.Integer">
    select count(*) from security_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update security_user
    <set>
      <if test="record.securityUserId != null">
        security_user_id = #{record.securityUserId,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.dateOfBirth != null">
        date_of_birth = #{record.dateOfBirth,jdbcType=DATE},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=INTEGER},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=BIGINT},
      </if>
      <if test="record.role != null">
        role = #{record.role,jdbcType=BIGINT},
      </if>
      <if test="record.firstname != null">
        firstname = #{record.firstname,jdbcType=VARCHAR},
      </if>
      <if test="record.lastname != null">
        lastname = #{record.lastname,jdbcType=VARCHAR},
      </if>
      <if test="record.active != null">
        active = #{record.active,jdbcType=BIT},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update security_user
    set security_user_id = #{record.securityUserId,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      date_of_birth = #{record.dateOfBirth,jdbcType=DATE},
      phone = #{record.phone,jdbcType=INTEGER},
      gender = #{record.gender,jdbcType=BIGINT},
      role = #{record.role,jdbcType=BIGINT},
      firstname = #{record.firstname,jdbcType=VARCHAR},
      lastname = #{record.lastname,jdbcType=VARCHAR},
      active = #{record.active,jdbcType=BIT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gym.mgt.mbg.model.SecurityUser">
    update security_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="dateOfBirth != null">
        date_of_birth = #{dateOfBirth,jdbcType=DATE},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=BIGINT},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=BIGINT},
      </if>
      <if test="firstname != null">
        firstname = #{firstname,jdbcType=VARCHAR},
      </if>
      <if test="lastname != null">
        lastname = #{lastname,jdbcType=VARCHAR},
      </if>
      <if test="active != null">
        active = #{active,jdbcType=BIT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where security_user_id = #{securityUserId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gym.mgt.mbg.model.SecurityUser">
    update security_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      date_of_birth = #{dateOfBirth,jdbcType=DATE},
      phone = #{phone,jdbcType=INTEGER},
      gender = #{gender,jdbcType=BIGINT},
      role = #{role,jdbcType=BIGINT},
      firstname = #{firstname,jdbcType=VARCHAR},
      lastname = #{lastname,jdbcType=VARCHAR},
      active = #{active,jdbcType=BIT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where security_user_id = #{securityUserId,jdbcType=BIGINT}
  </update>
</mapper>